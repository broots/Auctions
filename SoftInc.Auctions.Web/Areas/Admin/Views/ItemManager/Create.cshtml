@model SoftInc.Auctions.Web.Models.ItemModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create Item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemSummary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemSummary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemSummary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryIdSelected, Model.Categories, "--Please Select--", new { htmlAttributes = new { @id = "cats", @class = "form-control selectpicker" } })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SubCategoryIdSelected, Model.SubCategories, "--Please Select--", new { htmlAttributes = new { @id = "subcats", @class = "form-control selectpicker" } })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReservePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReservePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReservePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts
{
    <script type="text/javascript">

        $(document).ready(function () {
            //Dropdownlist Selectedchange event
            $("#CategoryIdSelected").change(function () {
                $("#SubCategoryIdSelected").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetSubCategories")', // we are calling json method

                    dataType: 'json',

                    data: { id: $("#CategoryIdSelected").val() },

                    success: function (subs) {
                        // states contains the JSON formatted list
                        // of states passed from the controller

                        $.each(subs, function (i, sub) {
                            $("#SubCategoryIdSelected").append('<option value="' + sub.Value + '">' +
                             sub.Text + '</option>');
                        // here we are adding option for States

                        });
                        $('#SubCategoryIdSelected').selectpicker('refresh')
                    },
                    error: function (ex) {
                        alert('Failed to retrieve sub categories.' + ex);
                    }
                });
                return false;
            })
        });
    </script>
}
